package com.test.algorithm;

import java.util.*;
import java.io.*;
import java.util.LinkedList;


public class Main
{  
   
    static Queue<Nods> queue = new LinkedList<>();
    static int N,M;
    static int[][] matrix;
    static int[][] visit;
   
    public static void main(String[] args) throws Exception{
    		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    		String[] inputs = br.readLine().split(" ");
    		N = Integer.parseInt(inputs[0]);
    		M = Integer.parseInt(inputs[1]);

    		matrix = new int[N][M];
    		visit = new int[N][M];

    		for (int i = 0; i < N; i++) {
    				String[] rows = br.readLine().split("");
   
    				for(int j = 0; j < M; j++) {
    					matrix[i][j] = Integer.parseInt(rows[j]);
    				}
    		}//for

    		queue.offer(new Nods(0,0));
    		visit[0][0] = 1;
    		
    		while(!queue.isEmpty()) {
    			Nods node = queue.poll();
    		}
    
	}
 	//BFS 알고리즘
	static void bfs(int x,int y) {
		
	}
	
}

class Nods {
	public int x;
	public int y;

	public Nods(int x,int y) {
			this.x = x;
			this.y = y;
		}
}