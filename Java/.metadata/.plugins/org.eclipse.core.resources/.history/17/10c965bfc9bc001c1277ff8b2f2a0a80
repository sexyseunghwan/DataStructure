package com.test.algorithm;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class ZeldaReview {
	
	static int N;
	static int[][] map;
	static int[][] visit;
	static int[] dr = {0,0,-1,1};
	static int[] dc = {1,-1,0,0};
	static int COUNT = 1;
	
	
	static void dijkstra() {
		
	}
	
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
			
		
		//while(true) {
			N = Integer.parseInt(br.readLine());
			
			//if (N == 0) break;
			
			map = new int[N][N];
			visit = new int[N][N];
			
			for (int i = 0; i < N; i++) {
				int j = 0; 
				StringTokenizer stk = new StringTokenizer(br.readLine()," ");
				
				while(stk.hasMoreTokens()) {
					map[i][j] = Integer.parseInt(stk.nextToken());
				}
			}
		//}
			
			for (int i = 0; i < N; i++) {
				for (int j = 0;j < N; j++) {
					System.out.print(map[i][j] + " ");
				}
				System.out.println();
			}
			
		
	}

}
