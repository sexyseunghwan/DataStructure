package com.test.algorithm;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Comparator;

public class Repeat {
	
	static int[] parent;
	static ArrayList<Node> nodeList = new ArrayList<Node>();
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int N = Integer.parseInt(br.readLine());
		int M = Integer.parseInt(br.readLine());
		
		parent = new int[N];
		
		for (int i = 0; i < M; i++) {
			String[] inputs = br.readLine().split(" ");
			nodeList.add(new Node(Integer.parseInt(inputs[0]),Integer.parseInt(inputs[1]),Integer.parseInt(inputs[2])));
		}
		
	}
	
	static class ListSort implements Comparator<Node> {

		@Override
		public int compare(Node n1, Node n2) {
			
			if (n1.w > n2.w) return 1;
			else if (n1.w < n2.w) return -1;
			else return 0;
		}
		
	}
	
	static class Node {
		public int x;
		public int y;
		public int w;
		
		public Node(int x,int y,int w) {
			this.x = x;
			this.y = y;
			this.w = w;
		}
	}
	
	static int findParent() {
		
		
		
		return 0;
	}
}
