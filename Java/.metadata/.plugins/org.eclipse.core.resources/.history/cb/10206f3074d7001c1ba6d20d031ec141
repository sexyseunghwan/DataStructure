package com.test.algorithm;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.PriorityQueue;

import com.test.algorithm.KthMinDistance1854.Node;


public class MoonFox16118 {
	
	static int N,M;
	static class FoxNode implements Comparable<FoxNode> {
		int v,d,c;
		
		public FoxNode(int v, int d, int c) {
			this.v = v;
			this.d = d;
			this.c = c;
		}
		
		@Override
		public int compareTo(FoxNode o) {
			 if (this.d < o.d) {
	                return -1;
	            }
	            return 1;
		}
	}
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		FoxNode f1 = new FoxNode(1, 3, 4);
		FoxNode f2 = new FoxNode(2, 1, 4);
		FoxNode f3 = new FoxNode(5, 100, 4);
		
		PriorityQueue<FoxNode> pq = new PriorityQueue<>();
		
		pq.offer(f1);
		pq.offer(f2);
		pq.offer(f3);
		
	}
}
