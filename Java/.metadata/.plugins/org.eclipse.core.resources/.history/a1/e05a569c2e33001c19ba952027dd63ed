package com.test.algorithm;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;

public class Maze2178 {

	static int[][] matrix;
	static int[][] visit;
	static int[] dx = {0,0,1,-1};
	static int[] dy = {1,-1,0,0};
	static Queue<int[]> queue;
	static Queue<Integer> answerQueue;
	
	public static void main(String[] args) throws Exception {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		String[] inputs = br.readLine().split(" ");
		int N = Integer.parseInt(inputs[0]);
		int M = Integer.parseInt(inputs[1]);

		matrix = new int[N][M];
		visit = new int[N][M];
		
		for (int i = 0; i < N; i++) {

			String[] numInputs = br.readLine().split("");

			for (int j = 0; j < M; j++) {
				matrix[i][j] = Integer.parseInt(numInputs[j]);
			}
		}
		
		
		queue = new LinkedList<>();
		answerQueue = new LinkedList<>();
		
		//bfs(0,0);
		
		
		while(queue.size() != 0) {
			int[] curr = queue.poll();
			
			int curX = curr[0];
			int curY = curr[1];
			
			if (curX == N - 1 && curY == M - 1) break;
			
			
		}
		
	}
	
	static void bfs(int x,int y) {
		visit[x][y] = 1;
		
		
		while()
		
	}
	
	

}